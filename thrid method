float x[], y[]; //position
float vx[], vy[]; //velocity
float m[]; //mass
float s[]; //raida 
float dt = 0.1;

float C = 6.673*pow(10, -11);

float Fbe;
float force;

int i;

float Lx;
float Ly;

void setup() {
  background(256, 256, 256);
  size(1000, 800);


  m = new float[2];

  x = new float[2];
  y = new float[2];

  vx = new float[2];
  vy = new float[2];
  
  s = new float[2];

  m[0] = 10;
  m[1] = 20;

  //initial for big one
  x[0] = 0;
  y[0] = 0;

  vx[0] = 0.0;
  vy[0] = 0.0;

  //initial for small one
  x[1] = 10;
  y[1] = 10;

  vx[1] = 5.0;
  vy[1] = 10.0;

  Lx = x[1] + 100.0;
  Ly = x[1] + 100.0;
  
  s[0] = 50.0;
  s[1] = 10.0;
  
}

void draw() {
  background(256, 256, 256);

  //grid
  for (i = 0; i<1000; i = i+20) {
    for (int j = 0; j<800; j = j + 20) {

      stroke(126);
      line(i, 0, i, 800);

      stroke(126);
      line(0, j, 1000, j);
    }
  }


  fill(0);
  for (i=0; i<2; i++)
  {
    float xmap=map(x[i], -Lx, Lx, 0, width);
    float ymap=map(y[i], -Ly, Ly, 0, height);
    ellipse(xmap, ymap, s[i], s[i]);
  } 

  float r = sqrt(pow(x[1]-x[0], 2) + pow(y[1] - y[0], 2));

  for (i=0; i<2; i++) {

    x[i] = x[i] + dt*vx[i] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);
    y[i] = y[i] + dt*vy[i] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);

    vx[i] = vx[i] + force*dt/(2*m[1]);
    vy[i] = vy[i] + force*dt/(2*m[1]);
  }


  //x[1] = x[1] + dt*vx[1] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);
  //y[1] = y[1] + dt*vy[1] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);

  //vx[1] = vx[1] + force*dt/(2*m[1]);
  //vy[1] = vy[1] + force*dt/(2*m[1]);

  //x[1] = x[1] + dt*vx[1] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);
  //y[1] = y[1] + dt*vy[1] + force(C, m[0], m[1], r)*pow(dt, 2)/(2*m[1]);

  //vx[1] = vx[1] + force*dt/(2*m[1]);
  //vy[1] = vy[1] + force*dt/(2*m[1]);
}

float force(float C, float m1, float m2, float r) {

  return C*m1*m2/(r*r);
}
